using System;

namespace tic_tac_toe_assesment
{
    class Program
    {
        static void Main(string[] args)
        {
            int gameStatus = 0;
            int currentPlayer = -1;
            char[] gameMakers = { '1', '2', '3', '4', '5', '6', '7', '8', '9' };
            do
            {
                Console.Clear();

                currentPlayer = GetNextPlayer(currentPlayer);

                HeadsUpDisplay(currentPlayer);
                DrawGameboard(gameMakers);



                GameEngine(gameMakers, currentPlayer);

                gameStatus = checkWinner(gameMakers);


            } while (gameStatus.Equals(0));

            if (gameStatus.Equals(1))
            {
                Console.Clear();

                HeadsUpDisplay(currentPlayer);
                DrawGameboard(gameMakers);

                Console.WriteLine($"Player {currentPlayer} is the winner!");
            }

            if (gameStatus.Equals(2))
            {
                Console.Clear();

                HeadsUpDisplay(currentPlayer);
                DrawGameboard(gameMakers);

                Console.WriteLine($"The game is draw!");

            }

        }

        private static int checkWinner(char[] gameMakers)
        {
            if (isGameDraw(gameMakers))
            {
                return 2;
            }

            if (isGameWinner(gameMakers))
            {
                return 1;
            }
            return 0;
        }

        private static bool isGameDraw(char[] gameMakers)
        {
            return gameMakers[0] != '1' &&
                gameMakers[1] != '2' &&
                gameMakers[2] != '3' &&
                gameMakers[3] != '4' &&
                gameMakers[4] != '5' &&
                gameMakers[5] != '6' &&
                gameMakers[6] != '7' &&
                gameMakers[7] != '8' &&
                gameMakers[8] != '9';
        }

        private static bool isGameWinner(char[] gameMarkers)
        {
            if (isGameMarkersTheSame(gameMarkers, 0, 1, 2))
            {
                return true;
            }
            if (isGameMarkersTheSame(gameMarkers, 3, 4, 5))
            {
                return true;
            }
            if (isGameMarkersTheSame(gameMarkers, 6, 7, 8))
            {
                return true;
            }
            if (isGameMarkersTheSame(gameMarkers, 0, 3, 6))
            {
                return true;
            }
            if (isGameMarkersTheSame(gameMarkers, 1, 4, 7))
            {
                return true;
            }
            if (isGameMarkersTheSame(gameMarkers, 2, 5, 8))
            {
                return true;
            }
            if (isGameMarkersTheSame(gameMarkers, 0, 4, 8))
            {
                return true;
            }
            if (isGameMarkersTheSame(gameMarkers, 2, 4, 6))
            {
                return true;
            }

            return false;
        }

        private static bool isGameMarkersTheSame(char[] testGameMarkers, int pos1, int pos2, int pos3)
        {
            return testGameMarkers[pos1].Equals(testGameMarkers[pos2]) && testGameMarkers[pos2].Equals(testGameMarkers[pos3]);
        }

        static void GameEngine(char[] gameMakers, int currentPlayer)
        {
            bool notvalidMove = false;
            do
            {
                // 3. As the user places markers on the game update the board then notify which player has a turn
                string userInput = Console.ReadLine();

                if (!string.IsNullOrEmpty(userInput) && userInput == "1" ||
                    userInput == "2" ||
                    userInput == "3" ||
                    userInput == "4" ||
                    userInput == "5" ||
                    userInput == "6" ||
                    userInput == "7" ||
                    userInput == "8" ||
                    userInput == "9")
                {
                    Console.Clear();

                    int.TryParse(userInput, out var gamePlacementMaker);

                    char currentMarker = gameMakers[gamePlacementMaker - 1];

                    if (currentMarker.Equals('X') || currentMarker.Equals('O'))
                    {
                        Console.WriteLine("Placement has already marked. Please select other markers");
                    }
                    else
                    {
                        gameMakers[gamePlacementMaker - 1] = GetPlayerMaker(currentPlayer);

                        notvalidMove = false;
                    }

                }
                else
                {
                    Console.WriteLine("Invalid selection please select another placement");
                }
            } while (notvalidMove);




        }

        private static char GetPlayerMaker(int Player)
        {
            if (Player % 2 == 0)
            {
                return 'O';
            }

            return 'X';
        }
        static void HeadsUpDisplay(int PlayerNumber)
        {
            // 1. Provide intructions
            // 1.1 A greeting
            Console.WriteLine("Welcome to Tic Tac Toe Game!");

            // 1.2 Display player sign, Player 1 is X and Player 2 is O
            Console.WriteLine("Player 1: X");
            Console.WriteLine("Player 2: O");
            Console.WriteLine();

            // 1.3 Who's turn is it?
            // 1.4 Instruct the user to enter a number between 1 and 9
            Console.WriteLine("Player {0} to move, select 1 through 9 from the game board", PlayerNumber);
            Console.WriteLine();
        }

        static void DrawGameboard(char[] gameMakers)
        {
            // 2. Draw the game board
            // 2.1 Game will have 3 rows and 3 colums will be numbered 1 throug 9

            Console.WriteLine($" {gameMakers[0]} | {gameMakers[1]} | {gameMakers[2]} ");
            Console.WriteLine("---+---+---");
            Console.WriteLine($" {gameMakers[3]} | {gameMakers[4]} | {gameMakers[5]} ");
            Console.WriteLine("---+---+---");
            Console.WriteLine($" {gameMakers[6]} | {gameMakers[7]} | {gameMakers[8]} ");
        }

        static int GetNextPlayer(int player)
        {
            if (player.Equals(1))
            {
                return 2;
            }

            return 1;
        }
    }
}
